/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/graph-worker.ts":
/*!*****************************!*\
  !*** ./src/graph-worker.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   workerInstance: () => (/* binding */ workerInstance)\n/* harmony export */ });\n/* harmony import */ var _pathfinding__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pathfinding */ \"./src/pathfinding.ts\");\n\nfunction add(a, b) {\n    return a + b;\n}\nlet workerInstance = {\n    add,\n    buildGraph: _pathfinding__WEBPACK_IMPORTED_MODULE_0__.buildGraph,\n    dijkstra: _pathfinding__WEBPACK_IMPORTED_MODULE_0__.dijkstra,\n    findPath: _pathfinding__WEBPACK_IMPORTED_MODULE_0__.findPath\n};\nself.addEventListener(\"message\", function (event) {\n    const { eventType, eventData, eventId } = event.data;\n    if (eventType === 'INITIALISE') {\n        self.postMessage({\n            eventType: \"INITIALISED\",\n            eventData: Object.keys(workerInstance)\n        });\n    }\n    else if (eventType === 'CALL') {\n        const method = workerInstance[eventData.method];\n        const result = method.apply(null, eventData.arguments);\n        self.postMessage({\n            eventType: \"RESULT\",\n            eventData: result,\n            eventId: eventId\n        });\n    }\n    else {\n        console.error(`Unknown event type ${eventType}`);\n    }\n}, false);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ3JhcGgtd29ya2VyLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQStEO0FBQy9EO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxjQUFjO0FBQ2QsWUFBWTtBQUNaLFlBQVk7QUFDWjtBQUNBO0FBQ0EsWUFBWSxnQ0FBZ0M7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsNENBQTRDLFVBQVU7QUFDdEQ7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViZ2wtcHJvYmUtMi8uL3NyYy9ncmFwaC13b3JrZXIudHM/ZjNiZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBidWlsZEdyYXBoLCBkaWprc3RyYSwgZmluZFBhdGggfSBmcm9tIFwiLi9wYXRoZmluZGluZ1wiO1xuZnVuY3Rpb24gYWRkKGEsIGIpIHtcbiAgICByZXR1cm4gYSArIGI7XG59XG5leHBvcnQgbGV0IHdvcmtlckluc3RhbmNlID0ge1xuICAgIGFkZCxcbiAgICBidWlsZEdyYXBoLFxuICAgIGRpamtzdHJhLFxuICAgIGZpbmRQYXRoXG59O1xuc2VsZi5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICBjb25zdCB7IGV2ZW50VHlwZSwgZXZlbnREYXRhLCBldmVudElkIH0gPSBldmVudC5kYXRhO1xuICAgIGlmIChldmVudFR5cGUgPT09ICdJTklUSUFMSVNFJykge1xuICAgICAgICBzZWxmLnBvc3RNZXNzYWdlKHtcbiAgICAgICAgICAgIGV2ZW50VHlwZTogXCJJTklUSUFMSVNFRFwiLFxuICAgICAgICAgICAgZXZlbnREYXRhOiBPYmplY3Qua2V5cyh3b3JrZXJJbnN0YW5jZSlcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGV2ZW50VHlwZSA9PT0gJ0NBTEwnKSB7XG4gICAgICAgIGNvbnN0IG1ldGhvZCA9IHdvcmtlckluc3RhbmNlW2V2ZW50RGF0YS5tZXRob2RdO1xuICAgICAgICBjb25zdCByZXN1bHQgPSBtZXRob2QuYXBwbHkobnVsbCwgZXZlbnREYXRhLmFyZ3VtZW50cyk7XG4gICAgICAgIHNlbGYucG9zdE1lc3NhZ2Uoe1xuICAgICAgICAgICAgZXZlbnRUeXBlOiBcIlJFU1VMVFwiLFxuICAgICAgICAgICAgZXZlbnREYXRhOiByZXN1bHQsXG4gICAgICAgICAgICBldmVudElkOiBldmVudElkXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihgVW5rbm93biBldmVudCB0eXBlICR7ZXZlbnRUeXBlfWApO1xuICAgIH1cbn0sIGZhbHNlKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/graph-worker.ts\n");

/***/ }),

/***/ "./src/pathfinding.ts":
/*!****************************!*\
  !*** ./src/pathfinding.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildGraph: () => (/* binding */ buildGraph),\n/* harmony export */   dijkstra: () => (/* binding */ dijkstra),\n/* harmony export */   findPath: () => (/* binding */ findPath),\n/* harmony export */   graph: () => (/* binding */ graph),\n/* harmony export */   haversine: () => (/* binding */ haversine)\n/* harmony export */ });\n/* harmony import */ var _external_priorityqueue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./external/priorityqueue */ \"./src/external/priorityqueue.js\");\n\nlet graph;\nfunction findPath(previous, endNodeIdx) {\n    const path = [];\n    let u = endNodeIdx;\n    if (u === undefined)\n        throw new Error(`Cannot find target node in the reverse lookup ${1}`);\n    while (u !== undefined) {\n        path.unshift(u);\n        u = previous[u];\n    }\n    return path;\n}\nfunction dijkstra(startNodeIndex) {\n    console.log(\"Starting dijkstra\");\n    let distances = {};\n    let previous = {};\n    const visited = new Set();\n    let nodes = graph.keys();\n    for (let node of nodes) {\n        distances[node] = Infinity;\n        previous[node] = undefined;\n    }\n    const pq = new _external_priorityqueue__WEBPACK_IMPORTED_MODULE_0__[\"default\"]((a, b) => {\n        return a.distance < b.distance;\n    });\n    pq.add({ distance: 0, idx: startNodeIndex });\n    distances[startNodeIndex] = 0;\n    console.time(\"dijkstra time:\");\n    const updates = [];\n    while (!pq.isEmpty()) {\n        const u = pq.poll().idx;\n        if (distances[u] === Infinity)\n            break;\n        visited.add(u);\n        for (const [v] of graph.get(u)) {\n            updates.push(v, u);\n            if (!visited.has(v)) {\n                const w = graph.get(u).get(v);\n                const newDistance = distances[u] + w;\n                if (distances[v] > newDistance) {\n                    distances[v] = newDistance;\n                    previous[v] = u;\n                    pq.add({ distance: distances[v], idx: v });\n                }\n            }\n        }\n        if (updates.length >= 100) {\n            self.postMessage({\n                eventType: \"GRAPH_VISITED_UPDATE_BULK\",\n                eventData: updates,\n            });\n            updates.length = 0;\n        }\n    }\n    self.postMessage({\n        eventType: \"GRAPH_VISITED_UPDATE_BULK\",\n        eventData: updates,\n    });\n    updates.length = 0;\n    console.timeEnd(\"dijkstra time:\");\n    return { previous };\n}\n/**\n * Ref: http://www.movable-type.co.uk/scripts/latlong.html\n * @param lon1\n * @param lat1\n * @param lon2\n * @param lat2\n */\nfunction haversine(lon1, lat1, lon2, lat2) {\n    const R = 6371e3; // metres\n    const φ1 = lat1 * Math.PI / 180; // φ, λ in radians\n    const φ2 = lat2 * Math.PI / 180;\n    const Δφ = (lat2 - lat1) * Math.PI / 180;\n    const Δλ = (lon2 - lon1) * Math.PI / 180;\n    const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\n        Math.cos(φ1) * Math.cos(φ2) *\n            Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const d = R * c; // in metres\n    return d;\n}\nfunction buildGraph(ways, nodes, nodeIdIdxMap) {\n    const g = new Map();\n    let edges = 0;\n    for (let i = 0; i < ways.length; i++) {\n        const way = ways[i];\n        if (way.tags.get(\"highway\") == undefined)\n            continue;\n        let oneWay = false;\n        if (way.tags.get(\"oneway\") === \"yes\" || way.tags.get(\"junction\") === \"roundabout\") {\n            oneWay = true;\n        }\n        const wayNodes = way.node_ids.map(id => {\n            const idx = nodeIdIdxMap.get(id);\n            if (idx === undefined) {\n                throw new Error(\"Cannot find index for node id\");\n            }\n            return nodes[idx];\n        });\n        for (let j = 0; j < wayNodes.length; j++) {\n            const start = wayNodes[j];\n            const end = wayNodes[j + 1];\n            if (start && end) {\n                const startIndex = nodeIdIdxMap.get(start.id);\n                const endIndex = nodeIdIdxMap.get(end.id);\n                if (startIndex === undefined || endIndex === undefined) {\n                    throw new Error(\"Cannot find index for node ids\");\n                }\n                const distance = haversine(start.lon, start.lat, end.lon, end.lat);\n                if (g.get(startIndex) === undefined) {\n                    g.set(startIndex, new Map());\n                }\n                if (g.get(endIndex) === undefined) {\n                    g.set(endIndex, new Map());\n                }\n                if (oneWay) {\n                    edges++;\n                    g.get(startIndex).set(endIndex, distance);\n                }\n                else {\n                    edges += 2;\n                    g.get(startIndex).set(endIndex, distance);\n                    g.get(endIndex).set(startIndex, distance);\n                }\n            }\n        }\n    }\n    console.log(`Built graph. Edges count: ${edges}`);\n    graph = g;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGF0aGZpbmRpbmcudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXlEO0FBQ2xEO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsRUFBRTtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiwrREFBaUI7QUFDcEM7QUFDQSxLQUFLO0FBQ0wsYUFBYSxrQ0FBa0M7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsZ0NBQWdDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLHNCQUFzQjtBQUN0QixxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLG9CQUFvQixpQkFBaUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Qsd0JBQXdCLHFCQUFxQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsTUFBTTtBQUNuRDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViZ2wtcHJvYmUtMi8uL3NyYy9wYXRoZmluZGluZy50cz81OWM2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBGYXN0UHJpb3JpdHlRdWV1ZSBmcm9tIFwiLi9leHRlcm5hbC9wcmlvcml0eXF1ZXVlXCI7XG5leHBvcnQgbGV0IGdyYXBoO1xuZXhwb3J0IGZ1bmN0aW9uIGZpbmRQYXRoKHByZXZpb3VzLCBlbmROb2RlSWR4KSB7XG4gICAgY29uc3QgcGF0aCA9IFtdO1xuICAgIGxldCB1ID0gZW5kTm9kZUlkeDtcbiAgICBpZiAodSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBmaW5kIHRhcmdldCBub2RlIGluIHRoZSByZXZlcnNlIGxvb2t1cCAkezF9YCk7XG4gICAgd2hpbGUgKHUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBwYXRoLnVuc2hpZnQodSk7XG4gICAgICAgIHUgPSBwcmV2aW91c1t1XTtcbiAgICB9XG4gICAgcmV0dXJuIHBhdGg7XG59XG5leHBvcnQgZnVuY3Rpb24gZGlqa3N0cmEoc3RhcnROb2RlSW5kZXgpIHtcbiAgICBjb25zb2xlLmxvZyhcIlN0YXJ0aW5nIGRpamtzdHJhXCIpO1xuICAgIGxldCBkaXN0YW5jZXMgPSB7fTtcbiAgICBsZXQgcHJldmlvdXMgPSB7fTtcbiAgICBjb25zdCB2aXNpdGVkID0gbmV3IFNldCgpO1xuICAgIGxldCBub2RlcyA9IGdyYXBoLmtleXMoKTtcbiAgICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XG4gICAgICAgIGRpc3RhbmNlc1tub2RlXSA9IEluZmluaXR5O1xuICAgICAgICBwcmV2aW91c1tub2RlXSA9IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgY29uc3QgcHEgPSBuZXcgRmFzdFByaW9yaXR5UXVldWUoKGEsIGIpID0+IHtcbiAgICAgICAgcmV0dXJuIGEuZGlzdGFuY2UgPCBiLmRpc3RhbmNlO1xuICAgIH0pO1xuICAgIHBxLmFkZCh7IGRpc3RhbmNlOiAwLCBpZHg6IHN0YXJ0Tm9kZUluZGV4IH0pO1xuICAgIGRpc3RhbmNlc1tzdGFydE5vZGVJbmRleF0gPSAwO1xuICAgIGNvbnNvbGUudGltZShcImRpamtzdHJhIHRpbWU6XCIpO1xuICAgIGNvbnN0IHVwZGF0ZXMgPSBbXTtcbiAgICB3aGlsZSAoIXBxLmlzRW1wdHkoKSkge1xuICAgICAgICBjb25zdCB1ID0gcHEucG9sbCgpLmlkeDtcbiAgICAgICAgaWYgKGRpc3RhbmNlc1t1XSA9PT0gSW5maW5pdHkpXG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgdmlzaXRlZC5hZGQodSk7XG4gICAgICAgIGZvciAoY29uc3QgW3ZdIG9mIGdyYXBoLmdldCh1KSkge1xuICAgICAgICAgICAgdXBkYXRlcy5wdXNoKHYsIHUpO1xuICAgICAgICAgICAgaWYgKCF2aXNpdGVkLmhhcyh2KSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHcgPSBncmFwaC5nZXQodSkuZ2V0KHYpO1xuICAgICAgICAgICAgICAgIGNvbnN0IG5ld0Rpc3RhbmNlID0gZGlzdGFuY2VzW3VdICsgdztcbiAgICAgICAgICAgICAgICBpZiAoZGlzdGFuY2VzW3ZdID4gbmV3RGlzdGFuY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzdGFuY2VzW3ZdID0gbmV3RGlzdGFuY2U7XG4gICAgICAgICAgICAgICAgICAgIHByZXZpb3VzW3ZdID0gdTtcbiAgICAgICAgICAgICAgICAgICAgcHEuYWRkKHsgZGlzdGFuY2U6IGRpc3RhbmNlc1t2XSwgaWR4OiB2IH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAodXBkYXRlcy5sZW5ndGggPj0gMTAwKSB7XG4gICAgICAgICAgICBzZWxmLnBvc3RNZXNzYWdlKHtcbiAgICAgICAgICAgICAgICBldmVudFR5cGU6IFwiR1JBUEhfVklTSVRFRF9VUERBVEVfQlVMS1wiLFxuICAgICAgICAgICAgICAgIGV2ZW50RGF0YTogdXBkYXRlcyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdXBkYXRlcy5sZW5ndGggPSAwO1xuICAgICAgICB9XG4gICAgfVxuICAgIHNlbGYucG9zdE1lc3NhZ2Uoe1xuICAgICAgICBldmVudFR5cGU6IFwiR1JBUEhfVklTSVRFRF9VUERBVEVfQlVMS1wiLFxuICAgICAgICBldmVudERhdGE6IHVwZGF0ZXMsXG4gICAgfSk7XG4gICAgdXBkYXRlcy5sZW5ndGggPSAwO1xuICAgIGNvbnNvbGUudGltZUVuZChcImRpamtzdHJhIHRpbWU6XCIpO1xuICAgIHJldHVybiB7IHByZXZpb3VzIH07XG59XG4vKipcbiAqIFJlZjogaHR0cDovL3d3dy5tb3ZhYmxlLXR5cGUuY28udWsvc2NyaXB0cy9sYXRsb25nLmh0bWxcbiAqIEBwYXJhbSBsb24xXG4gKiBAcGFyYW0gbGF0MVxuICogQHBhcmFtIGxvbjJcbiAqIEBwYXJhbSBsYXQyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBoYXZlcnNpbmUobG9uMSwgbGF0MSwgbG9uMiwgbGF0Mikge1xuICAgIGNvbnN0IFIgPSA2MzcxZTM7IC8vIG1ldHJlc1xuICAgIGNvbnN0IM+GMSA9IGxhdDEgKiBNYXRoLlBJIC8gMTgwOyAvLyDPhiwgzrsgaW4gcmFkaWFuc1xuICAgIGNvbnN0IM+GMiA9IGxhdDIgKiBNYXRoLlBJIC8gMTgwO1xuICAgIGNvbnN0IM6Uz4YgPSAobGF0MiAtIGxhdDEpICogTWF0aC5QSSAvIDE4MDtcbiAgICBjb25zdCDOlM67ID0gKGxvbjIgLSBsb24xKSAqIE1hdGguUEkgLyAxODA7XG4gICAgY29uc3QgYSA9IE1hdGguc2luKM6Uz4YgLyAyKSAqIE1hdGguc2luKM6Uz4YgLyAyKSArXG4gICAgICAgIE1hdGguY29zKM+GMSkgKiBNYXRoLmNvcyjPhjIpICpcbiAgICAgICAgICAgIE1hdGguc2luKM6UzrsgLyAyKSAqIE1hdGguc2luKM6UzrsgLyAyKTtcbiAgICBjb25zdCBjID0gMiAqIE1hdGguYXRhbjIoTWF0aC5zcXJ0KGEpLCBNYXRoLnNxcnQoMSAtIGEpKTtcbiAgICBjb25zdCBkID0gUiAqIGM7IC8vIGluIG1ldHJlc1xuICAgIHJldHVybiBkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkR3JhcGgod2F5cywgbm9kZXMsIG5vZGVJZElkeE1hcCkge1xuICAgIGNvbnN0IGcgPSBuZXcgTWFwKCk7XG4gICAgbGV0IGVkZ2VzID0gMDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHdheXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3Qgd2F5ID0gd2F5c1tpXTtcbiAgICAgICAgaWYgKHdheS50YWdzLmdldChcImhpZ2h3YXlcIikgPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIGxldCBvbmVXYXkgPSBmYWxzZTtcbiAgICAgICAgaWYgKHdheS50YWdzLmdldChcIm9uZXdheVwiKSA9PT0gXCJ5ZXNcIiB8fCB3YXkudGFncy5nZXQoXCJqdW5jdGlvblwiKSA9PT0gXCJyb3VuZGFib3V0XCIpIHtcbiAgICAgICAgICAgIG9uZVdheSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgd2F5Tm9kZXMgPSB3YXkubm9kZV9pZHMubWFwKGlkID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGlkeCA9IG5vZGVJZElkeE1hcC5nZXQoaWQpO1xuICAgICAgICAgICAgaWYgKGlkeCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgaW5kZXggZm9yIG5vZGUgaWRcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbm9kZXNbaWR4XTtcbiAgICAgICAgfSk7XG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgd2F5Tm9kZXMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHN0YXJ0ID0gd2F5Tm9kZXNbal07XG4gICAgICAgICAgICBjb25zdCBlbmQgPSB3YXlOb2Rlc1tqICsgMV07XG4gICAgICAgICAgICBpZiAoc3RhcnQgJiYgZW5kKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3RhcnRJbmRleCA9IG5vZGVJZElkeE1hcC5nZXQoc3RhcnQuaWQpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGVuZEluZGV4ID0gbm9kZUlkSWR4TWFwLmdldChlbmQuaWQpO1xuICAgICAgICAgICAgICAgIGlmIChzdGFydEluZGV4ID09PSB1bmRlZmluZWQgfHwgZW5kSW5kZXggPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBpbmRleCBmb3Igbm9kZSBpZHNcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IGRpc3RhbmNlID0gaGF2ZXJzaW5lKHN0YXJ0Lmxvbiwgc3RhcnQubGF0LCBlbmQubG9uLCBlbmQubGF0KTtcbiAgICAgICAgICAgICAgICBpZiAoZy5nZXQoc3RhcnRJbmRleCkgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBnLnNldChzdGFydEluZGV4LCBuZXcgTWFwKCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZy5nZXQoZW5kSW5kZXgpID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgZy5zZXQoZW5kSW5kZXgsIG5ldyBNYXAoKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChvbmVXYXkpIHtcbiAgICAgICAgICAgICAgICAgICAgZWRnZXMrKztcbiAgICAgICAgICAgICAgICAgICAgZy5nZXQoc3RhcnRJbmRleCkuc2V0KGVuZEluZGV4LCBkaXN0YW5jZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBlZGdlcyArPSAyO1xuICAgICAgICAgICAgICAgICAgICBnLmdldChzdGFydEluZGV4KS5zZXQoZW5kSW5kZXgsIGRpc3RhbmNlKTtcbiAgICAgICAgICAgICAgICAgICAgZy5nZXQoZW5kSW5kZXgpLnNldChzdGFydEluZGV4LCBkaXN0YW5jZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnNvbGUubG9nKGBCdWlsdCBncmFwaC4gRWRnZXMgY291bnQ6ICR7ZWRnZXN9YCk7XG4gICAgZ3JhcGggPSBnO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/pathfinding.ts\n");

/***/ }),

/***/ "./src/external/priorityqueue.js":
/*!***************************************!*\
  !*** ./src/external/priorityqueue.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * FastPriorityQueue.js : a fast heap-based priority queue  in JavaScript.\n * (c) the authors\n * Licensed under the Apache License, Version 2.0.\n *\n * Speed-optimized heap-based priority queue for modern browsers and JavaScript engines.\n *\n * Usage :\n         Installation (in shell, if you use node):\n         $ npm install fastpriorityqueue\n\n         Running test program (in JavaScript):\n\n         // var FastPriorityQueue = require(\"fastpriorityqueue\");// in node\n         var x = new FastPriorityQueue();\n         x.add(1);\n         x.add(0);\n         x.add(5);\n         x.add(4);\n         x.add(3);\n         x.peek(); // should return 0, leaves x unchanged\n         x.size; // should return 5, leaves x unchanged\n         while(!x.isEmpty()) {\n           console.log(x.poll());\n         } // will print 0 1 3 4 5\n         x.trim(); // (optional) optimizes memory usage\n */\n\n\nvar defaultcomparator = function (a, b) {\n    return a < b;\n};\n\n// the provided comparator function should take a, b and return *true* when a < b\nfunction FastPriorityQueue(comparator) {\n    if (!(this instanceof FastPriorityQueue)) return new FastPriorityQueue(comparator);\n    this.array = [];\n    this.size = 0;\n    this.compare = comparator || defaultcomparator;\n}\n\n// copy the priority queue into another, and return it. Queue items are shallow-copied.\n// Runs in `O(n)` time.\nFastPriorityQueue.prototype.clone = function () {\n    var fpq = new FastPriorityQueue(this.compare);\n    fpq.size = this.size;\n    fpq.array = this.array.slice(0, this.size);\n    return fpq;\n};\n\n// Add an element into the queue\n// runs in O(log n) time\nFastPriorityQueue.prototype.add = function (myval) {\n    var i = this.size;\n    this.array[this.size] = myval;\n    this.size += 1;\n    var p;\n    var ap;\n    while (i > 0) {\n        p = (i - 1) >> 1;\n        ap = this.array[p];\n        if (!this.compare(myval, ap)) {\n            break;\n        }\n        this.array[i] = ap;\n        i = p;\n    }\n    this.array[i] = myval;\n};\n\n// replace the content of the heap by provided array and \"heapify it\"\nFastPriorityQueue.prototype.heapify = function (arr) {\n    this.array = arr;\n    this.size = arr.length;\n    var i;\n    for (i = this.size >> 1; i >= 0; i--) {\n        this._percolateDown(i);\n    }\n};\n\n// for internal use\nFastPriorityQueue.prototype._percolateUp = function (i, force) {\n    var myval = this.array[i];\n    var p;\n    var ap;\n    while (i > 0) {\n        p = (i - 1) >> 1;\n        ap = this.array[p];\n        // force will skip the compare\n        if (!force && !this.compare(myval, ap)) {\n            break;\n        }\n        this.array[i] = ap;\n        i = p;\n    }\n    this.array[i] = myval;\n};\n\n// for internal use\nFastPriorityQueue.prototype._percolateDown = function (i) {\n    var size = this.size;\n    var hsize = this.size >>> 1;\n    var ai = this.array[i];\n    var l;\n    var r;\n    var bestc;\n    while (i < hsize) {\n        l = (i << 1) + 1;\n        r = l + 1;\n        bestc = this.array[l];\n        if (r < size) {\n            if (this.compare(this.array[r], bestc)) {\n                l = r;\n                bestc = this.array[r];\n            }\n        }\n        if (!this.compare(bestc, ai)) {\n            break;\n        }\n        this.array[i] = bestc;\n        i = l;\n    }\n    this.array[i] = ai;\n};\n\n// internal\n// _removeAt(index) will remove the item at the given index from the queue,\n// retaining balance. returns the removed item, or undefined if nothing is removed.\nFastPriorityQueue.prototype._removeAt = function (index) {\n    if (index > this.size - 1 || index < 0) return undefined;\n\n    // impl1:\n    //this.array.splice(index, 1);\n    //this.heapify(this.array);\n    // impl2:\n    this._percolateUp(index, true);\n    return this.poll();\n};\n\n// remove(myval) will remove an item matching the provided value from the\n// queue, checked for equality by using the queue's comparator.\n// return true if removed, false otherwise.\nFastPriorityQueue.prototype.remove = function (myval) {\n    for (var i = 0; i < this.size; i++) {\n        if (!this.compare(this.array[i], myval) && !this.compare(myval, this.array[i])) {\n            // items match, comparator returns false both ways, remove item\n            this._removeAt(i);\n            return true;\n        }\n    }\n    return false;\n};\n\n// removeOne(callback) will execute the callback function for each item of the queue\n// and will remove the first item for which the callback will return true.\n// return the removed item, or undefined if nothing is removed.\nFastPriorityQueue.prototype.removeOne = function (callback) {\n    if (typeof callback !== \"function\") {\n        return undefined;\n    }\n    for (var i = 0; i < this.size; i++) {\n        if (callback(this.array[i])) {\n            return this._removeAt(i);\n        }\n    }\n};\n\n// remove(callback[, limit]) will execute the callback function for each item of\n// the queue and will remove each item for which the callback returns true, up to\n// a max limit of removed items if specified or no limit if unspecified.\n// return an array containing the removed items.\n// The callback function should be a pure function.\nFastPriorityQueue.prototype.removeMany = function (callback, limit) {\n    // Skip unnecessary processing for edge cases\n    if (typeof callback !== \"function\" || this.size < 1) {\n        return [];\n    }\n    limit = limit ? Math.min(limit, this.size) : this.size;\n\n    // Prepare the results container to hold up to the results limit\n    var resultSize = 0;\n    var result = new Array(limit);\n\n    // Prepare a temporary array to hold items we'll traverse through and need to keep\n    var tmpSize = 0;\n    var tmp = new Array(this.size);\n\n    while (resultSize < limit && !this.isEmpty()) {\n        // Dequeue items into either the results or our temporary array\n        var item = this.poll();\n        if (callback(item)) {\n            result[resultSize++] = item;\n        } else {\n            tmp[tmpSize++] = item;\n        }\n    }\n    // Update the result array with the exact number of results\n    result.length = resultSize;\n\n    // Re-add all the items we can keep\n    var i = 0;\n    while (i < tmpSize) {\n        this.add(tmp[i++]);\n    }\n\n    return result;\n};\n\n// Look at the top of the queue (one of the smallest elements) without removing it\n// executes in constant time\n//\n// Calling peek on an empty priority queue returns\n// the \"undefined\" value.\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/undefined\n//\nFastPriorityQueue.prototype.peek = function () {\n    if (this.size == 0) return undefined;\n    return this.array[0];\n};\n\n// remove the element on top of the heap (one of the smallest elements)\n// runs in logarithmic time\n//\n// If the priority queue is empty, the function returns the\n// \"undefined\" value.\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/undefined\n//\n// For long-running and large priority queues, or priority queues\n// storing large objects, you may  want to call the trim function\n// at strategic times to recover allocated memory.\nFastPriorityQueue.prototype.poll = function () {\n    if (this.size == 0) return undefined;\n    var ans = this.array[0];\n    if (this.size > 1) {\n        this.array[0] = this.array[--this.size];\n        this._percolateDown(0);\n    } else {\n        this.size -= 1;\n    }\n    return ans;\n};\n\n// This function adds the provided value to the heap, while removing\n// and returning one of the smallest elements (like poll). The size of the queue\n// thus remains unchanged.\nFastPriorityQueue.prototype.replaceTop = function (myval) {\n    if (this.size == 0) return undefined;\n    var ans = this.array[0];\n    this.array[0] = myval;\n    this._percolateDown(0);\n    return ans;\n};\n\n// recover unused memory (for long-running priority queues)\nFastPriorityQueue.prototype.trim = function () {\n    this.array = this.array.slice(0, this.size);\n};\n\n// Check whether the heap is empty\nFastPriorityQueue.prototype.isEmpty = function () {\n    return this.size === 0;\n};\n\n// iterate over the items in order, pass a callback that receives (item, index) as args.\n// TODO once we transpile, uncomment\n// if (Symbol && Symbol.iterator) {\n//   FastPriorityQueue.prototype[Symbol.iterator] = function*() {\n//     if (this.isEmpty()) return;\n//     var fpq = this.clone();\n//     while (!fpq.isEmpty()) {\n//       yield fpq.poll();\n//     }\n//   };\n// }\nFastPriorityQueue.prototype.forEach = function (callback) {\n    if (this.isEmpty() || typeof callback != 'function') return;\n    var i = 0;\n    var fpq = this.clone();\n    while (!fpq.isEmpty()) {\n        callback(fpq.poll(), i++);\n    }\n};\n\n// return the k 'smallest' elements of the queue as an array,\n// runs in O(k log k) time, the elements are not removed\n// from the priority queue.\nFastPriorityQueue.prototype.kSmallest = function (k) {\n    if ((this.size == 0) || (k <= 0)) return [];\n    k = Math.min(this.size, k);\n    const newSize = Math.min(this.size, (2 ** (k - 1)) + 1);\n    if (newSize < 2) { return [this.peek()] }\n\n    const fpq = new FastPriorityQueue(this.compare);\n    fpq.size = newSize;\n    fpq.array = this.array.slice(0, newSize);\n\n    const smallest = new Array(k);\n    for (let i = 0; i < k; i++) {\n        smallest[i] = fpq.poll();\n    }\n    return smallest;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FastPriorityQueue);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/external/priorityqueue.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/graph-worker.ts");
/******/ 	
/******/ })()
;